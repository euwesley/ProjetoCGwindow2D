DisplayFile auxDSP = new DisplayFile();
            String valorP[] = null;
            List<String[]> matrizVP = new ArrayList<String[]>();
            try {
                BufferedReader br = new BufferedReader(new FileReader("C:/Users/ivofi/Desktop/" + jTextField4.getText() + ".txt"));
                try {
                    Poligono2D auxPol3D = new Poligono2D();
                    Ponto3D auxP3D = new Ponto3D();
                    while (br.ready()) {
                        String linha = br.readLine();
                        valorP = linha.split(" ");
                        matrizVP.add(valorP);
                    }
                    String[] x = null;
                    //System.out.println(x[2]);
                    //int j = 0;
                    for (int j = 0; j < matrizVP.size();j++) {
                        x = matrizVP.get(j);
                        if(!x[0].isEmpty()) {
                            for (int i = 0; i < x.length; i = i + 3) {
                                auxP3D = new Ponto3D(Double.parseDouble(x[i]), Double.parseDouble(x[i + 1]), Double.parseDouble(x[i + 2]));
                                auxPol3D.getPontos().add(auxP3D);
                                System.out.println(auxP3D.toString());
                            }
                        } else {
                            System.out.println("Espaço maldito");
                            auxDSP.getPoligonos().addElement(auxPol3D);
                            //auxPol3D.getPontos().clear();
                            auxPol3D = new Poligono2D();
                        }
                    }
                    auxPol3D.getPontos().addElement(auxP3D);
                    auxDSP.getPoligonos().addElement(auxPol3D);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Arquivo vazio");
                }
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Arquivo não encontrado!");
            }
            System.out.println(auxDSP.getPoligonos().get(0).getPontos());
            dsp.getPoligonos().addAll(auxDSP.getPoligonos());
            desenhaCanvas();